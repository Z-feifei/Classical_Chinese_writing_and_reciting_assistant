# -*- coding: utf-8 -*-
import asyncio
import os
from functools import lru_cache
from erniebot_agent.chat_models import ERNIEBot
from erniebot_agent.memory import HumanMessage, AIMessage, WholeMemory
import nest_asyncio
nest_asyncio.apply()

os.environ["EB_AGENT_ACCESS_TOKEN"] = "63534adaae1c3821e5b2448d91fb3555c5a33b37"

content=""
DiffofQ1=3
DiffofQ2=3
DiffofQ3=3
DiffofQ4=3
DiffofQ5=3

# 全局初始化模型 (单例模式)
@lru_cache(maxsize=None)
def get_ernie_model():
    return ERNIEBot(model="ernie-4.0")


# 异步缓存装饰器（需安装async_lru）
try:
    from async_lru import alru_cache
except ImportError:
    from functools import wraps


    def alru_cache(maxsize=128):
        def decorator(func):
            return wraps(func)(func)

        return decorator

# 基础提示词模板（减少重复构造）
BASE_PROMPTS = {
    "Q1": HumanMessage("角色设定：资深高中语文教师\n背景信息：\n作为学校出题组成员，你需要根据提供的文言文，设计一道符合高考语文考试标准的文言文断句题，用于高考模拟考试。你需根据学校要求的难度系数，设计不同难度的题目，以测试学生对文言文的理解和断句能力。"
                             "\n任务要求："
                             "\n一．生成一道高考格式的文言文断句题，要求考生根据所给句子进行断句。"
                             "\n二．题目的难度系数为1到5，系数越高，题目难度越大。"
                             "\n1.难度系数1-3：题目为选择题，提供4个选项，其中1个为正确选项，3个为错误选项。"
                             "\n2.难度系数4、5：题目为无选项，直接给出无标点的文言文句子，要求学生自行断句。"
                             "\n三．所选句子应为较长句子，包含多个短句，并具备一定的文言文理解难度。"
                             "\n难度控制说明："
                             "\n1.难度1：选择较为简单的文言句子，句中重难点词汇较少，错误选项的断句较为明显。"
                             "\n2.难度2-3：选择理解难度逐步增加的句子，句中包含更多重难点词汇，错误选项的断句具有迷惑性，考查学生对文言文结构的把握。"
                             "\n3.难度4、5：提供较难的长句，重难点词汇较多，要求学生自行断句，无提示选项，充分考查学生的理解和分析能力。"
                             "\n具体要求："
                             "\n一.题目所选句子长度应适中，由多个短句组成，不能过长或过于复杂，但要有效测试学生的断句能力和对文言文的理解能力。"
                             "\n二.在选择题中，正确选项的断句应准确无误，错误选项应包含常见的断句错误或对文言文理解的误区，以增强辨识难度。"
                             "\n三.提供详细答案："
                             "\n1.对正确选项进行解析，解释为何该断句正确，尤其对重难点词汇（如通假字、古今异义、一词多义等）进行详解。"
                             "\n2.对错误选项进行说明，解释其断句错误的原因，帮助学生理解常见的误断方式。"
                             "\n格式要求：你应当严格按照\n\n**题目**：\n[题目内容]\n\n**答案**：\n[答案内容]\n\n**解析**：\n[解析内容]\n\n的txt格式回答"),  # 保持原有内容
    "Q2": HumanMessage("角色设定：资深高中语文教师\n背景信息：\n你是学校出题组成员，负责根据给定的文言文设计高考模拟考试中的文言文词义及文化常识辨析题。学校要求根据题目的难度系数出题，题目的选项中涉及文言词汇和文化常识，需符合高考的命题标准。"
                             "\n\n任务要求："
                             "\n\n  1.根据给定的文言文，设计一道高考格式的词义及文化常识辨析题，包含四个选项。"
                             "\n    其中三个选项正确，一个错误选项作为答案，要求考生辨别哪个选项错误。"
                             "\n    2.提供答案并进行详细解释，尤其是涉及的词语和文化常识的解释。"
                             "\n    3.题目和选项需符合难度系数的要求，并依据不同系数调整题目的难易程度。"
                             "\n\n难度控制说明："
                             "\n\n  1.难度系数1：要求学生判断一个词在所给文言文句子中的意思。四个选项分别给出该词的四个不同解释。"
                             "\n    2.难度系数2-5：选项内容涉及文言文中的词语或文化常识。四个选项中的词语或文化常识互不相同，难度系数越高，选项中涉及的重难点词汇和复杂的文化常识越多："
                             "\n        a.难度系数2：词汇和文化常识为高中范围内常见的考点，解释较为直接。"
                             "\n        b.难度系数3：词汇和文化常识范围扩展至非核心考点，错误选项的解释具备迷惑性，容易误导学生。"
                             "\n        c.难度系数4、5：选项中含有高理解难度的词汇或文化常识，错误选项的解释更加隐蔽或易误认为正确，文化常识可能涉及课外知识。"
                             "\n\n题目构成："
                             "\n\n  1.至少一个选项为文言文中的词语，需给出该词在文言文中的含义，并提供该词在其他文言文或诗词中的意思进行比较。"
                             "\n    2.至少一个选项为文言文中的文化常识，需给出该文化常识的解释，并说明其在文言文中的具体运用。"
                             "\n    3.解释中应特别关注通假字、古今异义、一词多义等容易产生歧义的重点内容。"
                             "\n格式要求：你应当严格按照\n\n**题目**：\n[题目内容]\n\n**答案**：\n[答案内容]\n\n**解析**：\n[解析内容]\n\n的txt格式回答"),
    "Q3": HumanMessage("角色设定：资深高中语文教师\n背景信息：\n你作为学校出题组成员，需根据给定的文言文设计一套高考模拟考试中的文章理解题。题目应符合高考标准，同时根据学校设定的难度系数出题，确保覆盖不同难度层次的学生。"
                             "\n\n任务要求："
                             "\n\n  1.设计一道文章理解题，题目包括四个选项，要求考生从文言文中理解文章内容进行作答。"
                             "\n    2.其中三个选项为正确理解，一个选项为错误理解，错误选项作为答案。"
                             "\n    3.题目答案中需对错误选项进行详细解释，指出其与文意不符的原因。正确选项也需给出简要解释，帮助学生理解。"
                             "\n\n难度控制说明："
                             "\n\n  1.简单难度（系数1）：错误选项内容可以直接从文言文表层内容中判断，不需要复杂的推理或深入分析。句子结构简单，涉及的重难点词汇较少，文章内容直接明了。题目主要考察学生对基本文言知识的理解和识记。"
                             "\n    2.普通难度（系数2）：题目可以涉及一些古今异义、一词多义等基础知识，但错误选项仍然能够通过表层理解来判断。"
                             "\n    3.适中难度（系数3）：错误选项需要学生通过推理或深度分析，题目中出现部分重难点词汇。"
                             "\n    4.较高难度（系数4、5）：错误选项与正确选项的差异隐藏较深，题目涉及较多的重难点词汇，且需要考生深入理解和推理才能得出正确答案。"
                             "\n\n具体要求："
                             "\n\n  1.对于**简单难度（系数1）**的题目，题干和选项应尽量避免复杂句式和深层次推理，仅考察基本的文言文识记与理解，帮助基础较弱的学生顺利完成。"
                             "\n    2.提供详细的答案解释，尤其是对错误选项的分析，确保学生能够明晰其与文意不符的关键点。"
                             "\n\n格式要求：你应当严格按照\n\n**题目**：\n[题目内容]\n\n**答案**：\n[答案内容]\n\n**解析**：\n[解析内容]\n\n的txt格式回答"),
    "Q4": HumanMessage("角色设定：资深高中语文教师\n背景信息：\n你作为学校出题组的成员，任务是根据提供的一篇文言文，设计符合高考语文考试要求的文言文翻译题。该题目将用于学校的高考模拟考试。学校要求根据指定的难度系数进行出题，确保题目适合不同程度的学生。"
                             "\n\n目标："
                             "\n    1.生成一道高考语文考试格式的文言文翻译题，包含两个小题。"
                             "\n    2.每个小题配有答案和详细解释，尤其针对重难点词汇进行解释。"
                             "\n\n定义与说明："
                             "\n    1.重难点词汇：包括通假字、古今异义、一词多义等，这些词汇容易造成理解偏差，是考察的重点。"
                             "\n    2.难度系数：范围从1到5，难度系数越高，题目对于学生的挑战越大。"
                             "\n        难度1：简单，重难点词汇少，句子较为直白。"
                             "\n        难度2：普通，适当引入一些需要解释的词汇，结构清晰。"
                             "\n        难度3：适中，包含较多重难点词汇和复杂的语法结构。"
                             "\n        难度4、5：较高，句子较长，词汇与结构较为复杂，理解难度高。"
                             "\n规则与出题要求："
                             "\n    1.翻译关键字：每个小题选出3个翻译关键字作为采分点，需在答案中明确给出这些关键字及其对应的正确翻译。"
                             "\n    2.出题句子：小题（1）和小题（2）需从文言文不同句子中选取，句子长度控制在4个短句左右。难度较高时，可适当增加句子长度。"
                             "\n    3.每个小题都需在题目中直接给出需要翻译的文言文句子。"
                             "\n答案和解释："
                             "\n    1.每个小题的答案应包括对翻译关键字的准确翻译，并给出详细的解释，特别是针对容易产生理解偏差的词汇，需详细说明其含义。"
                             "\n    2.解释需涵盖通假字、古今异义、一词多义等，帮助学生清晰理解文意。"
                             "\n额外要求："
                             "\n    1.难度高的句子可以适当加入含有较多古今异义词或较复杂语法结构的句子，以增强考生的挑战。"
                             "\n    2.答案解释中可附带例句或进一步说明某些词汇的用法和背景，帮助学生深入理解文言文的语言特点。"
                             "\n格式要求：你应当严格按照\n\n**题目**：\n[题目内容]\n\n**答案**：\n[答案内容]\n\n**解析**：\n[解析内容]\n\n的txt格式回答"),
    "Q5": HumanMessage("角色设定：资深高中语文教师\n背景信息：\n作为学校出题组成员，你需要根据提供的文言文，设计一道符合高考语文考试标准的文言文简答题，用于高考模拟考试。同时需要根据学校要求设定难度系数，确保题目的难度适应不同层次的学生。"
                             "\n任务要求："
                             "\n    1.根据输入的一篇文言文设计一道高考格式的简答题，要求考生根据文章内容作答。"
                             "\n    2.根据题目的难度系数，控制题目的复杂程度。难度系数为1-4，系数越高，难度越大。"
                             "\n    3.答案部分需包含详尽的解释，尤其是重点解释容易造成理解误区的词汇，如：通假字、古今异义、一词多义等。"
                             "\n难度控制说明："
                             "\n    1.简单难度（系数1-2）：题目仅要求考生归纳概括文言文内容。若题目中明确指出了需要分析的内容位置，难度为普通（系数2）。"
                             "\n    2.较高难度（系数3-5）：要求考生对文言文中的内容进行分析，题目含有较高理解难度的句子时，难度为较高（系数4、5）。题目中不明确给出需要分析的位置，且含有理解难度较高的文言句子，则难度最高。"
                             "\n具体要求："
                             "\n    1.生成的题目需要是简答题，要求考生针对文言文中的某个问题进行回答。"
                             "\n    2.如果题目难度高，需要在题目中含有所给文言文中的句子，要求学生对句子进行分析和作答。 "
                             "\n    3.提供详细的答案，并解释相关文言文中的重难点词汇。"
                             "\n格式要求：你应当严格按照\n\n**题目**：\n[题目内容]\n\n**答案**：\n[答案内容]\n\n**解析**：\n[解析内容]\n\n的txt格式回答")
}



async def create_memory_with_prompts(prompt_key):
    """带缓存机制的提示词初始化"""
    memory = WholeMemory()
    memory.add_messages([BASE_PROMPTS[prompt_key], AIMessage("好的，我是高中语文教师，请给出文言文文章和难度系数，我将根据难度系数和文章内容生成题目。")])
    return memory


async def optimized_chat(prompt_key, content, difficulty):
    """优化后的统一聊天方法"""
    # 获取预初始化的memory
    memory = await create_memory_with_prompts(prompt_key)

    # 构造动态消息
    dynamic_prompt = {
        "Q1":content+ f"\n请根据这篇文言文和所给的要求,出一道高考格式的文言文断句题，难度系数{difficulty},需要给出答案和解析。"
                                         f"请注意，难度系数1-3时题目为选择题,难度系数4时题目为无选项。",
        "Q2":content+ f"\n请根据这篇文言文和所给的要求,出一道高考格式的文言文词义及文化常识辨析题，难度系数为{difficulty},需要给出答案和解析。"
                                         f"请注意，题目只有一道，不需要输出额外的题目，词语和文化常识可以同时存在。",
        "Q3":content+ f"\n请根据这篇文言文和所给的要求,出一道高考格式的对文章内容的理解题，难度系数为{difficulty},需要给出答案和解析。"
                                         f"请注意，题目为选择题，不是解答题。"
                                         f"再次强调，你应当严格按照\n\n**题目**：\n[题目内容]\n\n**答案**：\n[答案内容]\n\n**解析**：\n[解析内容]\n\n的txt格式回答",
        "Q4":content+ f"\n请根据这篇文言文和所给的要求,出一道高考格式的文言文翻译题,题目必须有两个小题，难度系数{difficulty},需要给出答案。"
                                         f"再次强调，你应当严格按照\n\n**题目**：\n[题目内容]\n\n**答案**：\n[答案内容]\n\n**解析**：\n[解析内容]\n\n的txt格式回答",
        "Q5":content+ f"\n请根据这篇文言文和所给的要求,出一道高考格式的文言文简答题,注意，是简答题，不是选择题,且只有一道，难度系数{difficulty},需要给出答案。"
                                         f"再次强调，你应当严格按照\n\n**题目**：\n[题目内容]\n\n**答案**：\n[答案内容]\n\n**解析**：\n[解析内容]\n\n的txt格式回答"

    }[prompt_key]

    messages = [HumanMessage(dynamic_prompt)]
    memory.add_messages(messages)

    # 带重试机制的模型调用
    max_retries = 3
    for attempt in range(max_retries):
        try:
            response = await get_ernie_model().chat(messages=messages)
            return response
        except Exception as e:
            if attempt == max_retries - 1:
                raise
            await asyncio.sleep(0.5 * (attempt + 1))


@alru_cache(maxsize=32)
async def generate_translation(text):
    """生成文言文的现代汉语译文"""
    print("开始生成译文")
    translation_prompt = f"""
    你是一名专业的古汉语翻译专家。请将下面这段文言文翻译成流畅的现代汉语。
    要求：
    1. 直译为主，意译为辅
    2. 保持原文的语言风格和修辞特点
    3. 对特殊文言现象（如通假字、词类活用等）给出必要说明

    文言文：
    {text}

    请按照以下格式返回结果：
    **译文**：
    [现代汉语翻译]

    **注释**：
    [对特殊文言现象的解释]
    """

    memory = WholeMemory()
    memory.add_messages([
        HumanMessage("角色设定：专业古籍翻译专家"),
        AIMessage("好的，请提供需要翻译的文言文内容"),
        HumanMessage(translation_prompt)
    ])

    # 带重试机制的模型调用
    max_retries = 3
    for attempt in range(max_retries):
        try:
            response = await get_ernie_model().chat(messages=memory.get_messages())
            print("翻译结束")
            return response
        except Exception as e:
            if attempt == max_retries - 1:
                raise
            await asyncio.sleep(0.5 * (attempt + 1))


@alru_cache(maxsize=32)
async def TR():
    print("开始翻译")
    return await generate_translation(content)

@alru_cache(maxsize=32)
async def Q1():
    print(f"开始执行Q1 难度:{DiffofQ1}")
    return await optimized_chat("Q1", content, DiffofQ1)


@alru_cache(maxsize=32)
async def Q2():
    print(f"开始执行Q2 难度:{DiffofQ2}")
    return await optimized_chat("Q2", content, DiffofQ2)

@alru_cache(maxsize=32)
async def Q3():
    print(f"开始执行Q3 难度:{DiffofQ3}")
    return await optimized_chat("Q3", content, DiffofQ3)


@alru_cache(maxsize=32)
async def Q4():
    print(f"开始执行Q4 难度:{DiffofQ4}")
    return await optimized_chat("Q4", content, DiffofQ4)

@alru_cache(maxsize=32)
async def Q5():
    print(f"开始执行Q5 难度:{DiffofQ5}")
    return await optimized_chat("Q5", content, DiffofQ5)